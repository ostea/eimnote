package com.comtop.eimnote.base;import android.support.v4.app.Fragment;import android.view.View;import com.comtop.eimnote.R;import com.comtop.eimnote.widget.CustomProgressDialog;public class BaseFragment extends Fragment {    private boolean mViewIsPrepared = false;// 界面是否准备好    private boolean mIsLazyLoad = false;// 是否开始请求数据    public View createView(View view) {        this.mViewIsPrepared = true;        return view;    }    // 如果是第一个加载的Fragment，请在OnActivityCreate里面手动调用setUserVisibleHint(true)    @Override    public void setUserVisibleHint(boolean isVisibleToUser) {        super.setUserVisibleHint(isVisibleToUser);        if (isVisibleToUser && mViewIsPrepared) {            loadData();        }        if (!isVisibleToUser && mViewIsPrepared) {            loadWhenInvisible();        }    }    @Override    public void onStop() {        super.onStop();        dismissPD();    }    private void loadData() {        if (!mIsLazyLoad) {            lazyLoad();            mIsLazyLoad = true;        }        loadWhenVisible();    }    protected void lazyLoad() {    }    protected void loadWhenVisible() {    }    protected void loadWhenInvisible() {    }    @Override    public void onHiddenChanged(boolean hidden) {        super.onHiddenChanged(hidden);        if (hidden) {        } else {        }    }    protected CustomProgressDialog progressDialog;    public void showProgress() {        showProgress(R.string.hold_on, true);    }    public void showProgress(int resID, boolean canBack) {        if (getActivity() == null) {            return;        }        if (progressDialog == null) {            progressDialog = new CustomProgressDialog(getActivity(), getResources()                    .getString(resID));            progressDialog.setCancelable(canBack);        }        if (progressDialog != null && progressDialog.isShowing()) {            progressDialog.cancel();        }        progressDialog.show();    }    public void dismissPD() {        if (getActivity() == null) {            return;        }        if (progressDialog != null && progressDialog.isShowing()) {            progressDialog.dismiss();        }    }    /*private View mEmptyView;    private TextView mEmptyAction;    private TextView mEmptyTips;    protected View mainContentView;    private ImageView mEmptyImage;    protected void initEmptyView(View mainView, View mainContentView) {        this.mainContentView = mainContentView;        mEmptyView = mainView.findViewById(R.id.empty_view);        mEmptyAction = (TextView) mainView.findViewById(R.id.tv_empty_action);        mEmptyTips = (TextView) mainView.findViewById(R.id.tv_tips);        mEmptyImage = (ImageView) mainView.findViewById(R.id.iv_empty_image);        mEmptyAction.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                clickToReload();            }        });    }*/    protected void clickToReload() {    }    //默认不显示点击重新加载   /* protected void showEmptyView() {        showEmptyView(false);    }*/    /*protected void showEmptyView(boolean isNeedShowActionView) {        if (getActivity() == null) {            return;        }        if (isNeedShowActionView) {            showActionView();        }        if (mEmptyView != null) {            mEmptyView.setVisibility(View.VISIBLE);        }        if (mainContentView != null) {            mainContentView.setVisibility(View.GONE);        }    }*/   /* protected void hideEmptyView() {        if (getActivity() == null) {            return;        }        if (mEmptyView != null) {            mEmptyView.setVisibility(View.GONE);        }        if (mainContentView != null) {            mainContentView.setVisibility(View.VISIBLE);        }    }*/   /* protected void showActionView() {        if (getActivity() == null) {            return;        }        mEmptyAction.setVisibility(View.VISIBLE);        mEmptyTips.setText(getString(R.string.no_more_data));    }*//*    protected void setActionText(int resId) {        if (getActivity() == null) {            return;        }        mEmptyAction.setText(resId);    }    protected void setActionText(String text) {        if (getActivity() == null) {            return;        }        mEmptyAction.setText(text);    }    protected void setTipsText(int resId) {        if (getActivity() == null) {            return;        }        mEmptyTips.setText(resId);    }*///    protected void hideTipsText() {//        if (getActivity() == null) {//            return;//        }//        mEmptyTips.setVisibility(View.GONE);//    }    /* protected void setTipsText(String str) {         if (getActivity() == null) {             return;         }         mEmptyTips.setText(str);     }     protected void setEmptyImage(int drawable) {         if (getActivity() == null) {             return;         }         mEmptyImage.setImageResource(drawable);     } */    public Fragment getRootFragment() {        Fragment fragment = getParentFragment();        while (fragment.getParentFragment() != null) {            fragment = fragment.getParentFragment();        }        return fragment;    }}